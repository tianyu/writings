[Seperate Data from Interface]
Object-oriented programming requires the management of the Data the Interface and the Implementation.

The Data:
- Where is it stored?
-
What is its lifetime?

The Interface:
- How should it be used?

The Implementation:
- How does the Interface access the Data?

An Interface defines how a Datum should be used.
It could be that a Datum can have multiple interfaces depending on the context in which it is accessed.
It could also be that an Interface accesses different types of Data.

[Make inheritance not complicated]
Currently, the concept of inheritance is too complicated.
This is sign that inheritance was not well thought out and could benefit from redesign.
Inheritance allows programmers to reuse interfaces as well as code.
It is a multi-use tool, yet there is no way to enforce a programmer to document which way it is used.
The implementation of inheritance is also complex, and complicated inheritance schemes leaves the compiler's implementation of the class somewhat of a black box surrounded by voodoo magic.
This is unacceptable as in some use cases, controlling an object's memory layout is imperative.
